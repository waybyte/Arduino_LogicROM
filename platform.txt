# Copyright (c) Waybyte Solutions. All right reserved.
# https://waybyte.in/
#
# Logicrom Arduino Core and platform.
#
# For more info:
# https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5---3rd-party-Hardware-specification

name=Logicrom Arduino
version=0.9.4

# Tools
# -----
tools.gfh_gen.cmd="{runtime.tools.python3.path}/python3" -I "{build.core.path}/logicromsdk/tools/GFH_Generator.py"
tools.gfh_gen.cmd.windows={build.core.path}/logicromsdk/tools/GFH_Generator.exe

tools.fota_gen.cmd="{runtime.tools.python3.path}/python3" -I "{build.core.path}/logicromsdk/tools/FOTA_Generator.py"
tools.fota_gen.cmd.windows={build.core.path}/logicromsdk/tools/FOTA_Generator.exe

tools.dtools.cmd.linux={build.core.path}/logicromsdk/tools/rda8910/linux/dtools
tools.dtools.cmd.windows={build.core.path}/logicromsdk/tools/rda8910/win32/dtools.exe
tools.pacgen.cmd={build.core.path}/logicromsdk/tools/rda8910/pacgen.py

tools.asrutils.cmd={runtime.platform.path}/scripts/asrutils.py

# compile variables
# ----------------------

compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra

compiler.path={runtime.tools.gcc-arm-none-eabi.path}/bin/
# MCU specific
compiler.mt2503.flags=-march=armv5te -mfloat-abi=soft
compiler.mt6261.flags=-march=armv5te -mfloat-abi=soft
compiler.rda8910.flags=-mcpu=cortex-a5 -mtune=generic-armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard -mno-unaligned-access
compiler.asr1601.flags=-mcpu=cortex-r4 -march=armv7-r -mfloat-abi=soft -mno-unaligned-access
compiler.asr1603.flags=-mcpu=cortex-r4 -march=armv7-r -mfloat-abi=soft -mno-unaligned-access

compiler.mt2503.ldflags=--specs=nano.specs -u _printf_float -u _scanf_float --specs=nosys.specs "-Wl,--defsym,platform_init=platform_{build.variant}_init" -L{build.core.path}/logicromsdk/lib/mtk
compiler.mt6261.ldflags=--specs=nano.specs -u _printf_float -u _scanf_float --specs=nosys.specs "-Wl,--defsym,platform_init=platform_{build.variant}_init" -L{build.core.path}/logicromsdk/lib/mtk
compiler.rda8910.ldflags=-L{build.core.path}/logicromsdk/lib/rda8910
compiler.asr1601.ldflags=-L{build.core.path}/logicromsdk/lib/asr160x
compiler.asr1603.ldflags=-L{build.core.path}/logicromsdk/lib/asr160x

# C Compiler
compiler.c.cmd=arm-none-eabi-gcc
compiler.c.flags=-std=gnu11 -c -Os -g {compiler.{build.mcu}.flags} -fmessage-length=0 -ffunction-sections -fdata-sections -fsigned-char {compiler.warning_flags} -mthumb -mthumb-interwork -D__BUFSIZ__=512 -D__FILENAME_MAX__=256 '-DDEFAULT_STDIO_PORT="{build.stdio_port}"'
# Linker
compiler.c.elf.cmd=arm-none-eabi-g++
compiler.c.elf.flags={compiler.{build.mcu}.flags} -mthumb -mthumb-interwork -Os
# Assembler
compiler.S.cmd=arm-none-eabi-gcc
compiler.S.flags=-c -g -x assembler-with-cpp
# CPP Compiler
compiler.cpp.cmd=arm-none-eabi-g++
compiler.cpp.flags=-std=gnu++11 -c -Os -g {compiler.{build.mcu}.flags} -fmessage-length=0 -ffunction-sections -fdata-sections -fsigned-char -fno-rtti -fno-exceptions -fno-use-cxa-atexit -fno-threadsafe-statics {compiler.warning_flags} -mthumb -mthumb-interwork -D__BUFSIZ__=512 -D__FILENAME_MAX__=256 '-DDEFAULT_STDIO_PORT="{build.stdio_port}"'
# Archiver
compiler.ar.cmd=arm-none-eabi-ar
compiler.ar.flags=rcs
# Elf2bin
compiler.elf2bin.cmd=arm-none-eabi-objcopy
compiler.elf2bin.flags=-O binary
# Linker Flags
compiler.ldflags= -Wl,--gc-sections,--relax -nostartfiles -nostdlib -nodefaultlibs {compiler.{build.mcu}.ldflags}
# Size
compiler.size.cmd=arm-none-eabi-size

# These can be overridden in platform.local.txt
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.cpp.extra_flags=
compiler.S.extra_flags=
compiler.ar.extra_flags=
compiler.elf2bin.extra_flags=

# Include paths
build.flags.logicrom="-I{build.core.path}/logicromsdk/include" "-I{build.core.path}/logicromsdk/include/ril"

# Compile patterns
# ---------------------

## Compile c files
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} '-DARDUINO_BSP_VERSION="{version}"' {compiler.c.extra_flags} {build.extra_flags} {build.flags.logicrom} {includes} "{source_file}" -o "{object_file}"

## Compile c++ files
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} '-DARDUINO_BSP_VERSION="{version}"' {compiler.cpp.extra_flags} {build.extra_flags} {build.flags.logicrom} {includes} "{source_file}" -o "{object_file}"

## Compile S files
recipe.S.o.pattern="{compiler.path}{compiler.S.cmd}" {compiler.S.flags} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {build.flags.logicrom} {includes} "{source_file}" -o "{object_file}"

## Create archives
# archive_file_path is needed for backwards compatibility with IDE 1.6.5 or older, IDE 1.6.6 or newer overrides this value
archive_file_path={build.path}/{archive_file}
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} {compiler.ar.extra_flags} "{archive_file_path}" "{object_file}"

## Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" "-L{build.path}" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} "-L{build.core.path}/logicromsdk/lib" "-T{build.ldscript}" "-Wl,-Map,{build.path}/{build.project_name}.map" {compiler.ldflags} -o "{build.path}/{build.project_name}.elf" {object_files} -Wl,--start-group -l{build.logicromlib}{build.build_type} -lc -lgcc -lm "{build.path}/{archive_file}" -Wl,--end-group

## Prelink hook
recipe.prelink.mt2503.hook="{runtime.tools.python3.path}/python3" -I -c "print()"
recipe.prelink.mt6261.hook="{runtime.tools.python3.path}/python3" -I -c "print()"
recipe.prelink.rda8910.hook="{compiler.path}{compiler.c.cmd}" "-I{build.core.path}/logicromsdk/lib/rda8910" -P -x c -E "{build.core.path}/logicromsdk/lib/rda8910/app_flashimg.ld" -o "{build.path}/{build.ldscript}"
recipe.prelink.asr1601.hook="{compiler.path}{compiler.c.cmd}" "-I{build.core.path}/logicromsdk/lib/asr160x" -P -x c -E -DFLASHSZ_{build.flashsz}=1 "{build.core.path}/logicromsdk/lib/asr160x/app_linker.ld" -o "{build.path}/{build.ldscript}"
recipe.prelink.asr1603.hook="{compiler.path}{compiler.c.cmd}" "-I{build.core.path}/logicromsdk/lib/asr160x" -P -x c -E -DFLASHSZ_{build.flashsz}=1 "{build.core.path}/logicromsdk/lib/asr160x/app_linker.ld" -o "{build.path}/{build.ldscript}"

recipe.hooks.linking.prelink.1.pattern={recipe.prelink.{build.mcu}.hook}

## Create output Binary file
## Pattern based on mcu type
## MT2503
mt2503.objcopy.1.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} {compiler.elf2bin.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/temp.bin"
mt2503.objcopy.2.pattern="{tools.gfh_gen.cmd}" "{build.path}/temp.bin" "{build.path}/{build.project_name}.bin"
mt2503.objcopy.3.pattern="{tools.fota_gen.cmd}" "{build.path}/{build.project_name}.bin" "{build.path}/fota_{build.project_name}.bin"
mt2503.prefix=bin
## MT6261
mt6261.objcopy.1.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} {compiler.elf2bin.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/temp.bin"
mt6261.objcopy.2.pattern="{tools.gfh_gen.cmd}" "{build.path}/temp.bin" "{build.path}/{build.project_name}.bin"
mt6261.objcopy.3.pattern="{tools.fota_gen.cmd}" "{build.path}/{build.project_name}.bin" "{build.path}/fota_{build.project_name}.bin"
mt6261.prefix=bin
## RDA8910
rda8910.objcopy.1.pattern="{tools.dtools.cmd}" mkappimg "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.img"
rda8910.objcopy.2.pattern="{runtime.tools.python3.path}/python3" -I "{tools.pacgen.cmd}" cfg-init --pname "UIX8910_MODEM" --palias "{build.project_name}" --pversion "8910 MODULE" --version "BP_R1.0.0" --flashtype 1 cfg-host-fdl -a 0x8000c0 -s 0xff40 -p {build.core.path}/logicromsdk/lib/rda8910/fdl1.img cfg-fdl2 -a 0x810000 -s 0x30000 -p {build.core.path}/logicromsdk/lib/rda8910/fdl2.img cfg-nvitem -n "Calibration" -i 0xFFFFFFFF --use 1 --replace 0 --continue 0 --backup 1 cfg-nvitem -n "GSM Calibration" -i 0x26d --use 1 --replace 0 --continue 1 --backup 1 cfg-nvitem -n "LTE Calibration" -i 0x26e --use 1 --replace 0 --continue 0 --backup 1 cfg-nvitem -n "IMEI" -i 0xFFFFFFFF --use 1 --replace 0 --continue 0 --backup 1 cfg-nvitem -n "BT_Config" -i 0x191 --use 1 --replace 0 --continue 1 --backup 1 cfg-nvitem -n "Logicrom" -i 0x280 --use 1 --replace 0 --continue 1 --backup 1 cfg-nvitem -n "Customer" -i 0x27e --use 1 --replace 0 --continue 1 --backup 1 cfg-image -i APPIMG -a 0x60230000 -s 0x100000 -p {build.path}/{build.project_name}.img pac-gen "{build.path}/{build.project_name}.pac"
rda8910.objcopy.3.pattern="{tools.dtools.cmd}" fotacreate2 --single-pac {build.path}/{build.project_name}.pac,{build.core.path}/logicromsdk/lib/rda8910/fota8910.xml "{build.path}/fota_{build.project_name}.bin"
rda8910.prefix=pac
## ASR160x
asr1601.objcopy.1.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} {compiler.elf2bin.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.img"
asr1601.objcopy.2.pattern="{runtime.tools.python3.path}/python3" -I "{tools.asrutils.cmd}" genzip {build.mcu} {build.flashsz} {build.core.path}/logicromsdk/lib/asr160x/pack {build.path}/{build.project_name}.img "{build.path}/{build.project_name}.zip"
asr1601.objcopy.3.pattern="{runtime.tools.python3.path}/python3" -I "{tools.asrutils.cmd}" genfota {build.path}/{build.project_name}.img "{build.path}/fota_{build.project_name}.bin"
asr1601.prefix=zip
asr1603.objcopy.1.pattern="{compiler.path}{compiler.elf2bin.cmd}" {compiler.elf2bin.flags} {compiler.elf2bin.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.img"
asr1603.objcopy.2.pattern="{runtime.tools.python3.path}/python3" -I "{tools.asrutils.cmd}" genzip {build.mcu} {build.flashsz} {build.core.path}/logicromsdk/lib/asr160x/pack {build.path}/{build.project_name}.img "{build.path}/{build.project_name}.zip"
asr1603.objcopy.3.pattern="{runtime.tools.python3.path}/python3" -I "{tools.asrutils.cmd}" genfota {build.path}/{build.project_name}.img "{build.path}/fota_{build.project_name}.bin"
asr1603.prefix=zip

recipe.objcopy.bin.1.pattern={{build.mcu}.objcopy.1.pattern}
recipe.objcopy.bin.2.pattern={{build.mcu}.objcopy.2.pattern}
recipe.objcopy.bin.3.pattern={{build.mcu}.objcopy.3.pattern}

## Save hex
recipe.output.tmp_file={build.project_name}.{{build.mcu}.prefix}
recipe.output.save_file={build.project_name}.{{build.mcu}.prefix}
recipe.hooks.savehex.postsavehex.1.pattern=cp "{build.path}/fota_{build.project_name}.bin" {sketch_path}
recipe.hooks.savehex.postsavehex.1.pattern.windows=cmd /Q /C copy "{build.path}\fota_{build.project_name}.bin" {sketch_path}

## Compute size
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A -d "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.text|\.data|\.rodata|\.text.align|\.ARM.exidx|\.ARM.extab|\.ll|\.initdata|\.init_array|\.corestub)\s+(\d+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit|\.corestub)\s+(\d+).*

## sketch uploader
## RDA8910
tools.logicromflasher_rda8910.path={runtime.tools.logicromflasher.path}
tools.logicromflasher_rda8910.cmd="{runtime.tools.python3.path}/python3" -I "{path}/upload.py"

tools.logicromflasher_rda8910.upload.params.verbose=
tools.logicromflasher_rda8910.upload.params.quiet=
tools.logicromflasher_rda8910.upload.pattern={cmd} "RDA8910" "{runtime.platform.path}/cores/{build.core}/logicromsdk/lib/rda8910/core_config.json" "{runtime.platform.path}/cores/{build.core}/logicromsdk/lib/rda8910/fdl1.img" "{runtime.platform.path}/cores/{build.core}/logicromsdk/lib/rda8910/fdl2.img" "{build.path}/{build.project_name}.img"

## ASR160x
tools.logicromflasher_asr160x.path={runtime.tools.logicromflasher.path}
tools.logicromflasher_asr160x.cmd="{runtime.tools.python3.path}/python3" -I "{path}/upload.py"

tools.logicromflasher_asr160x.upload.params.verbose=
tools.logicromflasher_asr160x.upload.params.quiet=
tools.logicromflasher_asr160x.upload.pattern={cmd} -m {build.mcu} "{build.path}/{build.project_name}.zip"

## MTK
tools.logicromflasher.path={runtime.tools.logicromflasher.path}
tools.logicromflasher.cmd="{runtime.tools.python3.path}/python3" -I "{path}/upload.py"
tools.logicromflasher.cmd.windows={path}/logicromflasher.exe

tools.logicromflasher.upload.params.verbose=
tools.logicromflasher.upload.params.quiet=
tools.logicromflasher.upload.pattern={cmd} -p {serial.port} -b {upload.speed} "{upload.verbose}" "{build.path}/{build.project_name}.bin"

## bootloader tool is the logicromflasher
tools.logicromflasher.bootloader.params.verbose=
tools.logicromflasher.bootloader.params.quiet=
tools.logicromflasher.bootloader.pattern={program.burn_pattern}

## dummy erase option to make tool menu work
tools.logicromflasher.erase.params.verbose=
tools.logicromflasher.erase.params.quiet=
tools.logicromflasher.erase.pattern=
